{"version":3,"sources":["libs/contextLib.js","libs/errorLib.js","containers/Home.js","containers/NotFound.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","containers/Signup.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/UserForms.js","containers/EditForm.js","containers/Users.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","handleErrors","response","ok","statusText","Home","console","log","window","location","history","useHistory","userId","className","push","NotFound","LoaderButton","isLoading","disabled","props","Button","glyph","children","useFormFields","initialState","useState","fields","setValues","event","target","id","value","Login","setUserId","setIsLoading","email","password","handleFieldChange","handleLoginResponse","a","text","responseText","preventDefault","formData","FormData","append","fetch","origin","method","body","then","onSubmit","FormGroup","controlId","FormLabel","FormControl","autoFocus","type","onChange","block","length","Signup","userName","confirmPassword","handleSignUpResponse","errorMessage","AuthenticatedRoute","rest","useLocation","pathname","search","to","UnauthenticatedRoute","UserForms","useParams","form","setForm","friends","setFriends","reload","useEffect","json","requestedForm","requestedFriends","onLoad","firstName","lastName","onClick","filter","f","variant","onAddFriend","onRemoveFriend","class","age","gender","interests","city","ListGroup","concat","map","friend","i","key","ListGroupItem","action","renderFriendsList","newFields","handleFormChange","headers","JSON","stringify","as","Users","users","setUsers","searchQuery","setSearchQuery","handleChangeSearchQuery","e","onKeyPressHandler","filteredUsers","allUsers","Form","inline","placeholder","onKeyPress","user","renderUsersList","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","handleCurrentSessionResponse","Navbar","expand","bg","Brand","href","Nav","Link","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a818c296.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    // Auth errors\r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }\r\n\r\nexport function handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  console.log(window.location)\r\n  const history = useHistory();\r\n  const { userId } = useAppContext();\r\n\r\n  function renderLander() {\r\n    return (\r\n      <div className=\"lander\">\r\n        <h1>Pavel Yusupov's social network</h1>\r\n        <p>Click sign up to register</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function redirectToForm() {\r\n    history.push(`/user_forms/${userId}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {userId ? redirectToForm() : renderLander()}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Glyphicon from '@strongdm/glyphicon'\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React, { useState } from \"react\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Login.css\";\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const { setUserId } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function validateForm() {\r\n        return fields.email.length > 0 && fields.password.length > 0;\r\n    }\r\n\r\n    async function handleLoginResponse(response) {\r\n        let responseText = await response.text()\r\n        if (!response.ok) {\r\n            if (responseText === \"Wrong credentials\") {\r\n                throw responseText;\r\n            } else {\r\n                throw Error(response.statusText);\r\n            }\r\n        }\r\n        return responseText;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let formData = new FormData()\r\n            formData.append('login', fields.email)\r\n            formData.append('password', fields.password)\r\n            let userId = await fetch(`${window.location.origin}/sign_in`, {\r\n                method: 'POST',\r\n                body: formData\r\n            }).then(handleLoginResponse)\r\n            setUserId(userId)\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Login\r\n               </LoaderButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n    const history = useHistory();\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        userName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return (\r\n            fields.email.length > 0 &&\r\n            fields.userName.length > 0 &&\r\n            fields.password.length > 0 &&\r\n            fields.password === fields.confirmPassword\r\n        );\r\n    }\r\n\r\n    async function handleSignUpResponse(response) {\r\n        let errorMessage = await response.text()\r\n        if (!response.ok) {\r\n          if (errorMessage === \"User already exists\") {\r\n            throw errorMessage;\r\n          } else {\r\n            throw Error(response.statusText);\r\n          }\r\n        }\r\n        return response;\r\n      }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let formData = new FormData()\r\n            formData.append('email', fields.email)\r\n            formData.append('userName', fields.userName)\r\n            formData.append('password', fields.password)\r\n            await fetch(`${window.location.origin}/create_user`, {\r\n                method: 'POST',\r\n                body: formData\r\n            }).then(handleSignUpResponse)\r\n            setIsLoading(false);\r\n            history.push(\"/login\");\r\n        } catch (e) {\r\n            onError(e)\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"userName\">\r\n                    <FormLabel>User name</FormLabel>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={fields.userName}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\">\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmPassword}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Sign up\r\n               </LoaderButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nexport default function AuthenticatedRoute({ children, ...rest }) {\r\n  const { pathname, search } = useLocation();\r\n  const { userId } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {userId ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={\r\n          `/login?redirect=${pathname}${search}`\r\n        } />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nexport default function UnauthenticatedRoute({ children, ...rest }) {\r\n  const { userId } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {!userId ? (\r\n        children\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./UserForms.css\"\r\n\r\nexport default function UserForms() {\r\n    const { id } = useParams();\r\n    const { userId } = useAppContext();\r\n    const history = useHistory();\r\n    const [form, setForm] = useState(null);\r\n    const [friends, setFriends] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            try {\r\n                let requestedForm = await fetch(`${window.location.origin}/get_form/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setForm(requestedForm);\r\n\r\n                let requestedFriends = await fetch(`${window.location.origin}/get_friends/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setFriends(requestedFriends)\r\n            } catch (e) {\r\n                onError(e);\r\n            }\r\n        }\r\n\r\n        onLoad();\r\n    }, [id]);\r\n\r\n    function onEdit() {\r\n        history.push(`/edit_form/${userId}`)\r\n    }\r\n\r\n    async function onAddFriend() {\r\n        try {\r\n            await fetch(`${window.location.origin}/add_friend/?user=${userId}&friend=${id}`)\r\n                .then(handleErrors)\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n        window.location.reload(false);\r\n    }\r\n\r\n    async function onRemoveFriend() {\r\n        try {\r\n            await fetch(`${window.location.origin}/remove_friend/?user=${userId}&friend=${id}`)\r\n                .then(handleErrors)\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n        window.location.reload(false);\r\n    }\r\n\r\n    function renderFriendsList(friends) {\r\n        return [{}].concat(friends).map((friend, i) =>\r\n            i !== 0 && (\r\n                <LinkContainer key={friend.id} to={`/user_forms/${friend.id}`}>\r\n                    <ListGroupItem action>\r\n                        {friend.firstName} {friend.lastName}\r\n                    </ListGroupItem>\r\n                </LinkContainer>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            {form && (\r\n                <div>\r\n                    <h3>\r\n                        {form.firstName} {form.lastName}\r\n                    </h3>\r\n                    {id === userId ?\r\n                        <Button onClick={() => onEdit()} className=\"px-4\">Edit form</Button>\r\n                        : friends.filter(f => f.id !== id).length === 0 ?\r\n                            <Button variant=\"success\" onClick={() => onAddFriend()} className=\"px-4\">Add friend</Button>\r\n                            :\r\n                            <Button variant=\"danger\" onClick={() => onRemoveFriend()} className=\"px-4\">Remove friend</Button>\r\n                    }\r\n                    <div class=\"info\">\r\n                        <div class=\"left\">\r\n                            <h2>\r\n                                <strong>Age</strong> {form.age}\r\n                            </h2>\r\n                            <h2>\r\n                                <strong>Gender</strong> {form.gender}\r\n                            </h2>\r\n                            <h2>\r\n                                <strong>Interests</strong> {form.interests}\r\n                            </h2>\r\n                            <h2>\r\n                                <strong>City</strong> {form.city}\r\n                            </h2>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                            <h2>\r\n                                <strong>Friends</strong>\r\n                                <ListGroup variant=\"flush\">\r\n                                    {renderFriendsList(friends)}\r\n                                </ListGroup>\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./UserForms.css\"\r\n\r\nfunction useFormFields(initialState) {\r\n    const [fields, setValues] = useState(initialState);\r\n  \r\n    return [\r\n      fields,\r\n      function(newFields) {\r\n        setValues(newFields);\r\n      },\r\n      function(event) {\r\n        if (event.target.id === \"age\") {\r\n          setValues({...fields, [event.target.id]: +event.target.value});\r\n        } else {\r\n          setValues({...fields, [event.target.id]: event.target.value});\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\nexport default function UserForms() {\r\n    const { id } = useParams();\r\n    const { userId } = useAppContext();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [form, setForm, handleFormChange] = useFormFields(null);\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            try {\r\n                let requestedForm = await fetch(`${window.location.origin}/get_form/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setForm(requestedForm);\r\n            } catch (e) {\r\n                onError(e);\r\n            }\r\n        }\r\n\r\n        onLoad();\r\n    }, [id]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            await fetch(`${window.location.origin}/update_form/${id}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify(form)\r\n            }).then(handleErrors)\r\n            setIsLoading(false);\r\n            history.push(`/user_forms/${id}`)\r\n        } catch (e) {\r\n            onError(e)\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Edit form\">\r\n            {form && id === userId && (<form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"firstName\">\r\n                    <FormLabel>First name</FormLabel>\r\n                    <FormControl autoFocus type=\"text\" value={form.firstName} onChange={handleFormChange}/>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"lastName\">\r\n                    <FormLabel>Last name</FormLabel>\r\n                    <FormControl type=\"text\" value={form.lastName} onChange={handleFormChange}/>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"age\">\r\n                    <FormLabel>Age</FormLabel>\r\n                    <FormControl type=\"number\" value={form.age} onChange={handleFormChange}/>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"gender\">\r\n                    <FormLabel>Gender</FormLabel>\r\n                    <FormControl as=\"select\" value={form.gender} onChange={handleFormChange}>\r\n                        <option></option>\r\n                        <option>M</option>\r\n                        <option>F</option>\r\n                    </FormControl>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"interests\">\r\n                    <FormLabel>Interests</FormLabel>\r\n                    <FormControl type=\"text\" value={form.interests} onChange={handleFormChange}/>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"city\">\r\n                    <FormLabel>City</FormLabel>\r\n                    <FormControl type=\"text\" value={form.city} onChange={handleFormChange}/>\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                >\r\n                    Submit\r\n               </LoaderButton>\r\n            </form>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Form, FormControl } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./Users.css\";\r\n\r\nexport default function Users() {\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const { userId } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    async function onLoad() {\r\n      if (!userId) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        let allUsers = await fetch(`${window.location.origin}/all_users`)\r\n          .then(handleErrors)\r\n          .then(response => response.json())\r\n        setUsers(allUsers)\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n  \r\n      setIsLoading(false);\r\n    }\r\n  \r\n    onLoad();\r\n  }, [userId]);\r\n\r\n  function renderUsersList(users) {\r\n    return [{}].concat(users).map((user, i) =>\r\n      i !== 0 && (\r\n        <LinkContainer key={user.id} to={`/user_forms/${user.id}`}>\r\n          <ListGroupItem action>\r\n             {user.firstName} {user.lastName}\r\n          </ListGroupItem>\r\n        </LinkContainer>\r\n      ) \r\n    );\r\n  }\r\n\r\n  function handleChangeSearchQuery(e) {\r\n    setSearchQuery(e.target.value)\r\n  }\r\n\r\n  async function onKeyPressHandler(e) {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      try {\r\n        let filteredUsers = await fetch(`${window.location.origin}/all_users/?filter=${searchQuery}`)\r\n          .then(handleErrors)\r\n          .then(response => response.json())\r\n        setUsers(filteredUsers)\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderUsers() {\r\n    return (\r\n      <div className=\"users\">\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={handleChangeSearchQuery} onKeyPress={onKeyPressHandler} />\r\n        </Form>\r\n        <ListGroup variant=\"flush\">\r\n          {!isLoading && renderUsersList(users)}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Users\">\r\n      {userId && renderUsers()}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\r\nimport UserForms from \"./containers/UserForms\";\r\nimport EditForm from \"./containers/EditForm\";\r\nimport Users from \"./containers/Users\"\r\n\r\nexport default function Routes() {\r\n    console.log(window.location)\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <AuthenticatedRoute exact path=\"/users\">\r\n                <Users />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/user_forms/:id\">\r\n                <UserForms />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/edit_form/:id\">\r\n                <EditForm />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/home\">\r\n                <Home />\r\n            </AuthenticatedRoute>\r\n            <UnauthenticatedRoute exact path=\"/login\">\r\n                <Login />\r\n            </UnauthenticatedRoute>\r\n            <UnauthenticatedRoute exact path=\"/signup\">\r\n                <Signup />\r\n            </UnauthenticatedRoute>\r\n            <Route>\r\n                <NotFound />\r\n            </Route>\r\n\r\n        </Switch>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { handleErrors, onError } from \"./libs/errorLib\";\nimport Routes from \"./Routes\";\nimport \"./App.css\"\n\nfunction App() {\n  const history = useHistory();\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [userId, setUserId] = useState(null);\n  \n  async function handleCurrentSessionResponse(response) {\n    let responseText = await response.text()\n    if (!response.ok) {\n      if (responseText === \"No current user\") {\n        throw responseText;\n      } else {\n        throw Error(response.statusText);\n      }\n    }\n    return responseText;\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      try {\n        console.log(window.location)\n        let id = await fetch(`${window.location.origin}/current_session`)\n          .then(handleCurrentSessionResponse)\n        setUserId(id);\n      }\n      catch (e) {\n        if (e !== 'No current user') {\n          onError(e);\n        }\n      }\n    \n      setIsAuthenticating(false);\n    }\n\n    onLoad();\n  }, []);\n\n  function handleUsers() {\n    history.push(\"/users\")\n  }\n\n  async function handleLogout() {\n    await fetch(`${window.location.origin}/sign_out`).then(handleErrors);\n    setUserId(null);\n    history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating &&\n    <div className=\"App container\">\n      <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\"><h1>Pavel's socials</h1></Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          {userId\n            ? <>\n              <Nav.Link onClick={handleUsers}><h3>Search friends</h3></Nav.Link>\n              <Nav.Link onClick={handleLogout}><h3>Logout</h3></Nav.Link>\n            </>\n            : <>\n              <Nav.Link href=\"login\"><h3>Login</h3></Nav.Link>\n              <Nav.Link href=\"signup\"><h3>Sign up</h3></Nav.Link>\n            </>\n          }\n        </Nav>\n      </Navbar>\n      <AppContext.Provider value={{ userId, setUserId }}>\n        <Routes />\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconsole.log(window.location)\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}